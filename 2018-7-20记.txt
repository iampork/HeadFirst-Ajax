1、问题描述：for()循环中var i=0；和直接i=0的区别；
for (var i = 0; i < 5; i++) {  // i 是全局变量
    // do something
}
function func() {
    for (var j = 0; j < 5; j++) {  // j 是 func 函数内的局部变量
        // do something
    }
    for (k = 0; k < 5; k++) {  // k 是全局变量
        // do something
    }
}
console.log(i);  // 5
console.log(k);  // 5
console.log(j);  // 报错：j 未定义


2、调用一个函数时函数加括号和不叫括号的区别

函数只要是要调用它进行执行的，都必须加括号。此时，函数实际上等于函数的返回值或者执行效果，当然，有些没有返回值，但已经执行了函数体内的行为，就是说，加括号的，就代表将会执行函数体代码。
不加括号的，都是把函数名称作为函数的指针，一个函数的名称就是这个函数的指针，此时不是得到函数的结果，因为不会运行函数体代码。它只是传递了函数体所在的地址位置，在需要的时候好找到函数体去执行。
 
例如window.onload=init;
init函数并不会在这行代码时就执行，浏览器加载文档时这句话会被加载，会被告知文档加载完要执行哪个函数，但实际上没有当时就执行，等到整个文档加载完成之后才会通过init这个指针去执行init()。
 
 
所以一般时候我们都是采用的是无括号的原因。这也是由于括号的二义性，因为括号是“函数调用运算符”，相当于在执行这样一个函数,所以产生的问题在理解了之后也就理解了。